@use 'sass:math';
@use '../../style/color';
@use '../../style/variable' as *;
@use '../../style/mixin';

.card {
  $dark: color.$translucent;

  @include mixin.card-bg-style() {
    min-width: 0;
    word-wrap: break-word;
    transition: background-color 0.2s;
  }

  &::after,
  &::before {
    left: -$card-list-offset;
    height: $drop-line-size;
    width: calc(100% + #{$card-list-offset * 2});
    border-radius: math.div($drop-line-size, 2);
    background-color: fade-out(color.$dark, 0.5);
    position: absolute;
  }

  &__id,
  &__title,
  &__label,
  &__description {
    transition: opacity 0.2s;
  }

  &--draggable {
    background-color: $dark;

    .card {
      &__id,
      &__title,
      &__label,
      &__description {
        opacity: 0;
        pointer-events: none;
      }
    }
  }

  &__title {
    display: block;
    font-size: 1.25em;
    padding-right: 1.5em;
    position: relative;
    margin: 0 0 0.5em;
    z-index: 15;

    &:last-child {
      margin: 0;
    }
  }

  &__description {
    display: block;
    line-height: 1.3;
    position: relative;
    z-index: 10;
  }

  &__menu {
    position: relative;
    z-index: 20;
  }

  &__id {
    color: color.$gray;
    font-size: 0.8em;
    vertical-align: text-bottom;
    margin-right: 0.35em;
  }

  &__label {
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: $card-label-height;
    border-radius: $card-border-radius $card-border-radius 0 0;
    position: absolute;
    z-index: 5;
  }

  // Operations with $color-list
  @each $name, $value in color.$color-list {
    &--#{$name} {
      .card__label {
        background-color: $value;
      }
    }
  }

  &__edit-button {
    top: 0;
    right: 0;
    width: 1.875em;
    height: 1.875em;
    position: absolute;
    opacity: 0;
  }

  // Modifications

  &--lg {
    .card__label {
      height: 100%;
      border-radius: $card-border-radius;
    }

    // Operations with $color-list
    @each $name, $value in color.$color-list-for-text {
      &.card--#{$name} {
        color: $value;

        .card {
          &__id {
            color: fade-out($value, 0.3);
          }

          &__edit-button {
            .icon {
              fill: fade-out($value, 0.4);
            }
          }
        }
      }
    }
  }

  &--over {
    &::before {
      content: '';
      top: -5px;
    }
  }

  &--under {
    &::after {
      content: '';
      bottom: -5px;
    }
  }

  &--demo {
    top: 0;
    left: 0;
    position: fixed;
    pointer-events: none;
    box-sizing: border-box;
    padding: 1em 1.15em;
    z-index: 50;

    &:not(.card--show) {
      display: none;
    }

    &.card--archived {
      .card__title {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }

  &:not(&--draggable):not(&--over):not(&--under) {
    &:hover {
      .card__edit-button {
        opacity: 1;
      }
    }
  }
}
